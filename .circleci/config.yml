version: 2
jobs:
  build-gimp-2-10:
    macos:
        xcode: "10.0.0"
      
    steps:
        - checkout
        - run:
            name: Cleanup /usr/local
            command: sudo rm -rf /usr/local/*
        - run:
            name: Setup rust
            command: curl https://sh.rustup.rs -sSf | sh -s -- -y                        
        - run:
            name: Setup jhbuild
            command: | 
              curl  https://gitlab.gnome.org/samm-git/gtk-osx/raw/fork-test/gtk-osx-build-setup.sh | sh
              echo 'export PATH="$HOME/.cargo/bin:$HOME/.local/bin:$PATH"' > ~/.profile
              echo 'export ARCHFLAGS="-arch x86_64"' >> ~/.profile
              cat ~/.profile
        - run:
            name: Setup gtk-mac-bundler
            command: | 
              cd ~/Source
              git clone https://github.com/samm-git/gtk-mac-bundler -b fix-otool
              cd gtk-mac-bundler
              make install
        # we need to make it automatically depended on the corresponding modules
        - restore_cache:
            keys: 
              - gimp-2.10.8-v5
              - webkit-v9
              - gimp-deps-v9
              - bootstrap-v12
        - run:
            name: Setup 10.9 SDK
            command: | 
              cd /Library/Developer/CommandLineTools/SDKs
              sudo curl -L 'https://github.com/phracker/MacOSX-SDKs/releases/download/MacOSX10.11.sdk/MacOSX10.9.sdk.tar.xz' | sudo tar -xzf - 
              echo 'export SDKROOT=/Library/Developer/CommandLineTools/SDKs/MacOSX10.9.sdk' >> ~/.profile
        - run:
            name: Bootstrap
            command: source ~/.profile && jhbuild bootstrap && jhbuild build python python-six meta-gtk-osx-freetype meta-gtk-osx-bootstrap meta-gtk-osx-core
        - run:
            name: Cleanup
            command: find  ~/gtk/source -type d -mindepth 1 -maxdepth 1 | xargs -I% rm -rf %/*
        - save_cache:
            paths:
              - ~/gtk
            key: bootstrap-v12
        - run:
            name: Build all GIMP dependencies
            command: source ~/.profile && jhbuild build $(jhbuild info gimp|grep '^Requires:'|sed 's|^Requires:||'|tr -d ',')
        - run:
            name: Build all WebKit dependencies
            command: source ~/.profile && jhbuild build $(jhbuild info webkit|grep '^Requires:'|sed 's|^Requires:||'|tr -d ',')
        - run:
            name: Cleanup
            command: find  ~/gtk/source -type d -mindepth 1 -maxdepth 1 | xargs -I% rm -rf %/*
        - save_cache:
            paths:
              - ~/gtk
            key: gimp-deps-v9
        - run:
            name: Build WebKit v1
            no_output_timeout: 1h
            command: source ~/.profile && jhbuild build webkit
        - run:
            name: Cleanup
            command: find  ~/gtk/source -type d -mindepth 1 -maxdepth 1 | xargs -I% rm -rf %/*
        - save_cache:
            paths:
              - ~/gtk
            key: webkit-v9
#        - run:
#            name: rebuild gtk (temporary)
#            command: source ~/.profile && rm -rf ~/gtk/source/gtk+-2.24.32 && jhbuild buildone --force gtk+
        - run:
            name: Build GIMP
            # XXX make check is not working reliably under circle ci, so not running it
            command: | 
              source ~/.profile
              jhbuild build gimp
        - run:
            name: Building GIMP help (en) from git
            command: source ~/.profile && ALL_LINGUAS=en jhbuild build gimp-help-git
        - run:
            name: Cleanup
            command: find  ~/gtk/source -type d -mindepth 1 -maxdepth 1 | xargs -I% rm -rf %/*
        - save_cache:
            paths:
              - ~/gtk
            key: gimp-2.10.8-v5
        - run:
            name: Importing signing certificate
            command: |
              mkdir ${HOME}/codesign && cd ${HOME}/codesign
              echo "$osx_crt" | base64 -D > gnome.pfx
              curl 'https://developer.apple.com/certificationauthority/AppleWWDRCA.cer' > apple.cer
              security create-keychain -p "" signchain
              security set-keychain-settings signchain
              security unlock-keychain -u signchain
              security list-keychains  -s "${HOME}/Library/Keychains/signchain-db" "${HOME}/Library/Keychains/login.keychain-db"
              security import apple.cer -k signchain  -T /usr/bin/codesign
              security import gnome.pfx  -k signchain -P "$osx_crt_pw" -T /usr/bin/codesign
              security set-key-partition-list -S apple-tool:,apple: -k "" signchain
              rm -rf ${HOME}/codesign
        - run:
            name: Creating DMG package
            command: |
              source ~/.profile
              cd ${HOME}/project/package
              jhbuild run ./build.sh
        - store_artifacts:
            path: /tmp/artifacts
            destination: builds

workflows:
  version: 2
  build-different-versions:
    jobs:
      - build-gimp-2-10
 
